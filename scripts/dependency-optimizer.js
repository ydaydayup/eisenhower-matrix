// 依赖优化脚本const fs = require('fs');const path = require('path');const { execSync } = require('child_process');// 常见不必要的开发依赖模式const DEV_PATTERNS = [  '**/test/**',  '**/tests/**',  '**/*.test.*',  '**/*.spec.*',  '**/example/**',  '**/examples/**',  '**/docs/**',  '**/.github/**',  '**/coverage/**'];// 合并依赖以减少重复const dedupeDependencies = () => {  try {    execSync('pnpm dedupe', { stdio: 'inherit' });  } catch (error) {  }};// 清理node_modules中的不必要文件const cleanNodeModules = () => {  try {    // 这个命令在Windows上可能需要额外的配置或工具    const command = process.platform === 'win32'       ? 'for %p in (' + DEV_PATTERNS.join(' ') + ') do if exist "node_modules\\%p" rmdir /s /q "node_modules\\%p"'      : `find node_modules -type d -path "${DEV_PATTERNS.join('" -o -path "')}" -exec rm -rf {} \\; 2>/dev/null || true`;    execSync(command, { shell: true, stdio: 'inherit' });  } catch (error) {  }};// 分析依赖大小const analyzeDependencies = () => {  try {    // 使用较轻量的方式检查依赖大小    execSync('pnpm list --depth=0', { stdio: 'inherit' });  } catch (error) {  }};// 执行优化步骤const main = () => {  dedupeDependencies();  cleanNodeModules();  analyzeDependencies();};main(); 