// 优化构建脚本const fs = require('fs');const path = require('path');const { execSync } = require('child_process');// 创建缓存目录const createCacheDirs = () => {  const dirs = [    '.next/cache',    'electron-cache',    '.next/cache/webpack'  ];  dirs.forEach(dir => {    const dirPath = path.join(process.cwd(), dir);    if (!fs.existsSync(dirPath)) {      fs.mkdirSync(dirPath, { recursive: true });    } else {    }  });  // 确保webpack缓存目录有正确的权限  const webpackCacheDir = path.join(process.cwd(), '.next/cache/webpack');  try {    fs.accessSync(webpackCacheDir, fs.constants.R_OK | fs.constants.W_OK);  } catch (err) {    // 尝试修复权限问题    try {      // 在Windows上这可能不起作用，但在Linux/Mac上有效      fs.chmodSync(webpackCacheDir, 0o755);    } catch (chmodErr) {    }  }};// 清理不必要的依赖const cleanupDependencies = () => {  try {    // 在生产环境中移除开发依赖    if (process.env.NODE_ENV === 'production') {      execSync('pnpm prune --prod', { stdio: 'inherit' });    }  } catch (error) {  }};// 预热构建缓存const warmupCache = () => {  try {    // 确保electron下载缓存正确设置    process.env.ELECTRON_CACHE = path.join(process.cwd(), 'electron-cache');    // 预先下载electron    execSync('pnpm electron-builder install-app-deps', { stdio: 'inherit' });  } catch (error) {  }};// 执行优化步骤const main = () => {  createCacheDirs();  warmupCache();  cleanupDependencies();};main(); 